// Global
$checkbox--size: rem(30) !default;
$checkbox--margin-size: rem(24) !default;
$checkbox--color: $form--color !default;
$checkbox--label-weight: $form--label-weight !default;
// After
$checkbox--after-size: rem(17) !default;
$checkbox--after-size-hover: 2.8 !default;
$checkbox--after-background: transparent !default;
$checkbox--after-background-hover: rgba($form--border-color-focus, 0.2) !default;
$checkbox--after-background-checked: $form--primary !default;
// Background
$checkbox--back-background: $white !default;
$checkbox--back-background-hover: $white !default;
$checkbox--back-background-checked: $white !default;
// Border
$checkbox--border-radius: $form--border-radius !default;
$checkbox--border-size: $form--border-size !default;
$checkbox--border-color: $form--border-color !default;
$checkbox--border-color-hover: $form--border-color-focus !default;
$checkbox--border-color-checked: $form--primary !default;
// Check
$checkbox--check-width: 2 !default;
$checkbox--check-color: findColorInvert($form--primary) !default; // findColorInvert is a bulma function

.checkbox {
  position: relative;

  display: inline-block;
  width: auto;

  color: $checkbox--color;
  font-weight: $checkbox--label-weight;

  cursor: pointer;

  .input-checkbox {
    position: absolute;
      
    cursor: pointer;
    opacity: 0;

    &:checked:focus:not(:hover) ~.checkbox-inner .checkbox-checkbox,
    &:checked:focus:not(:hover) ~.checkbox-inner .checkbox-check {
      box-shadow: 0 0 0 $form--focus-width rgba($checkbox--border-color-checked, $form--focus-rgba);
    }        
  }
    
  &:hover,
  .input-checkbox:focus:not(:checked)~.checkbox-inner {
    /* stylelint-disable-next-line selector-max-compound-selectors */
    .checkbox-checkbox,
    .checkbox-check {
      border-color: $checkbox--border-color-hover;
    }

    /* stylelint-disable-next-line selector-max-compound-selectors */
    .checkbox-checkbox,
    .checkbox-check {
      background: $checkbox--back-background-hover;
      border-color: $checkbox--border-color-hover;

      &::after {
        background: $checkbox--after-background-hover;
        transform: translate3d(-50%, -50%, 0) scale($checkbox--after-size-hover);
      }
    }
  } 

  &.is-float {
    .checkbox-inner {
      display: block;
    }

    .checkbox-check {
      float: left;
      margin-top: rem(5);
    }
  }

  &.is-block {
    width: 100%;

    .checkbox-inner {
      display: flex !important;
      align-items: center;
      height: $form--height;
      padding: $form--pt $form--pr $form--pb $form--pl;

      background: $form--background;
      border: $form--border-size solid $form--border-color;
      border-radius: $form--border-radius;
    
    }

    &:hover .checkbox-inner,
    .input-checkbox:focus ~.checkbox-inner {
      border-color: $checkbox--border-color-hover;
    }
  }
}


.checkbox-inner {
  display: inline-flex;
  align-items: center;
}

.checkbox-label {
  // line-height: 1.325;    
}

.checkbox-check {
  position: relative;

  display: inline-block;
  width: $checkbox--size;
  min-width: $checkbox--size;
  height: $checkbox--size;
  margin-right: rem(15);

  color: transparent;

  background: $checkbox--back-background;
  border: $checkbox--border-size solid darken($checkbox--border-color, 5%);
  border-radius: $checkbox--border-radius;

  transition: all 0.2s ease;
    
  &::after {
    position: absolute;
    top: 50%;
    left: 50%;

    width: $checkbox--after-size;
    height: $checkbox--after-size;

    background: $checkbox--after-background;
    // border-radius: $checkbox--border-radius;
    border-radius: 50%;
    transform: translate3d(-50%, -50%, 0);

    transition: all 0.2s ease;

    content: '';
  }
}

.check-svg-path {
  stroke-width: $checkbox--check-width;

  stroke: $checkbox--check-color;
}

.input-checkbox:checked~ .checkbox-inner .checkbox-check {
  background: $checkbox--back-background-checked;

  background: $checkbox--after-background-checked;
  border-color: $checkbox--border-color-checked;

  &::after {
    background: $checkbox--after-background-checked;
    transform: translate3d(-50%, -50%, 0) scale(1);

    transition: all 0.1s ease;
  }

  &::after {
    opacity: 0;
  }

}
