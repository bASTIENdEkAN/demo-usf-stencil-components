// Box Model
$button--height: $form--height !default;
$button--py: rem(15) !default;
$button--px: rem(25) !default;
// Typography
$button--color: $white !default;
$button--family: $family-default !default;
$button--font-weight: $weight-bold !default;
// Visual
$button--background: $primary !default;
$button--background-disabled: $grey-lighter !default;
$button--border-width: rem(2) !default;
$button--border-radius: $border-radius !default;
$button--shadow-hover-width: rem(1);
$button--shadow-active-width: rem(2);
$button--shadow-focus-width: $form--focus-width !default;
// Animation
$button--transition: all 0.2s ease-in-out !default;

// Function 
@function box-shadow-flat($size, $color, $size2, $color2) {
    $result: 0 0 0 $size $color, 0 0 0 $size2 $color2;

    @if $size2 and $color2 {
        $result: 0 0 0 $size $color, 0 0 0 $size2 $color2;
    }

    @return $result;
}

// Mixins
@mixin button-base() {
    @extend %control; 
    @extend %unselectable;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    height: $button--height;
    padding: $button--py $button--px;

    color: $button--color;
    font-weight: $button--font-weight;
    font-family: $button--family;
    white-space: nowrap;
    text-align: center;

    border-style: solid;
    border-width: $button--border-width;
    border-radius: $button--border-radius;
    cursor: pointer;

    transition: $button--transition;
 
    strong { 
        color: inherit; 
    } 

    .icon {  
        &:not(:first-child) {
            margin-right: rem(-4);
            margin-left: rem(6);
        }

        &:not(:last-child) {
            margin-right: rem(6);
            margin-left: rem(-4);
        }
    }
    // Loading
    &--loading {
        color: transparent !important;

        pointer-events: none;

        &::after {
            @extend %loader;
            @include center(1em);
            position: absolute !important;
        }
    }
}

@mixin button-color-background(
    $color: $button--color, 
    $background: $button--background, 
    $color-hover: $button--color, 
    $background-hover: darken($button--background, 5%),
) {
    $border-shadow-color: $background;
    $border-shadow-color-hover: $background-hover;
    $background-disabled: $button--background-disabled;
    $color-disabled: $white;
    @if $background==transparent {
        $border-shadow-color: $color;
        $border-shadow-color-hover: $color;
        $background-disabled: transparent;
        $color-disabled: $button--background-disabled;
    }

    color: $color;

    background: $background;
    border-color: $border-shadow-color;

    &:focus:not(:active) {
        box-shadow: box-shadow-flat(0, $border-shadow-color, $button--shadow-focus-width, rgba($border-shadow-color, $form--focus-rgba));

        &:hover {
            box-shadow: box-shadow-flat($button--shadow-hover-width, $border-shadow-color-hover, $button--shadow-focus-width, rgba($border-shadow-color-hover, $form--focus-rgba));
        }
    }

    &:hover {
        color: $color-hover;

        background: $background-hover;
        border-color: $border-shadow-color-hover;
        box-shadow: box-shadow-flat($button--shadow-hover-width, $border-shadow-color-hover, $button--shadow-hover-width, $border-shadow-color-hover);

        &:active {
            box-shadow: box-shadow-flat($button--shadow-active-width, $border-shadow-color-hover, $button--shadow-active-width, $border-shadow-color-hover);
        } 
    }

    // Disbaled
    &[disabled] {
        color: $color-disabled;

        background: $background-disabled;
        border-color: $button--background-disabled;

        pointer-events: none;
    }
    // Loading
    &--loading {
        &::after {
            border-bottom-color: $color;
            border-left-color: $color;
        }
    }
}

@mixin button-link-color($color: $button--background) {
    color: $color;
    text-decoration: underline;

    background-color: transparent;
    border-color: transparent;
    box-shadow: none;
    
    &:hover,
    &:focus,
    &:focus:hover {
        color: $color;
        text-decoration: none;
      
        background-color: transparent;
        border-color: transparent;
        box-shadow: none;
    }
    // Disbaled
    &[disabled] {
        color: $button--background-disabled;

        pointer-events: none;
    }
    // Loading
    &--loading {
        &::after {
            border-bottom-color: $color;
            border-left-color: $color;
        }
    }
}

// Button
.button,
%button { 
    @include button-base();
    @include button-color-background();

    &--outlined {
        @include button-color-background($button--background, transparent, $button--background, transparent);
    }

    &--has-link {
        @include button-link-color();
    }
}

// Buttons
$buttons--gutter-x: rem(4);
$buttons--gutter-y: rem(8);

.buttons {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: flex-start;

    .button {
        margin-bottom: $buttons--gutter-y;

        &:not(:last-child):not(.is-fullwidth) {
            @include ltr-property('margin', #{$buttons--gutter-x});
        }
    }

    &--centered {
        justify-content: center;

        &:not(.has-addons) {
            .button:not(.is-fullwidth) {
                margin-right: $buttons--gutter-x;
                margin-left: $buttons--gutter-x;
            }
        }
    }

    &--right {
        justify-content: flex-end;
    }
} 
