// Global
$checkbox-button--size: rem(24) !default;
$checkbox-button--margin-size: rem(24) !default;
$checkbox-button--color: $form--color !default;
$checkbox-button--label-weight: $form--label-weight !default;
// After
$checkbox-button--after-size: rem(17) !default;
$checkbox-button--after-size-hover: 2.8 !default;
$checkbox-button--after-background: transparent !default;
$checkbox-button--after-background-hover: rgba($form--border-color-focus, 0.2) !default;
$checkbox-button--after-background-checked: $form--primary !default;
// Background
$checkbox-button--back-background: $white !default;
$checkbox-button--back-background-hover: $white !default;
$checkbox-button--back-background-checked: $white !default;
// Border
$checkbox-button--border-radius: rem(5) !default;
$checkbox-button--border-size: $form--border-size !default;
$checkbox-button--border-color: $form--border-color !default;
$checkbox-button--border-color-hover: $form--border-color-focus !default;
$checkbox-button--border-color-checked: $form--primary !default;
// Check
$checkbox-button--check-width: 2 !default;
$checkbox-button--check-color: $form--primary !default; // findColorInvert is a bulma function

.checkbox-button {
    $self: &;

    position: relative;

    display: inline-block;
    width: auto;

    color: $radio--color;
    font-weight: $radio--label-weight;

    cursor: pointer;

    &__input {
        position: absolute;

        cursor: pointer;
        opacity: 0;
    }

    &__inner {
        @include button-base();
        @include button-color-background($black, transparent); 
        display: flex;
        justify-content: space-between;
        width: 100%;
        height: auto;
        min-height: $form--height;

        white-space: wrap;

        border-color: $grey-lighter;
        border-width: 1px;
    }
    
    &__label {
        white-space: normal;
        text-align: left;
    }

    &__check {
        position: relative;
  
        display: inline-block;
        width: $checkbox-button--size;
        min-width: $checkbox-button--size;
        height: $checkbox-button--size;
        margin-left: rem(15);
  
        color: transparent;
  
        background: $checkbox-button--back-background;
        border: $checkbox-button--border-size solid darken($checkbox-button--border-color, 5%);
        border-radius: $checkbox-button--border-radius;
  
        transition: all 0.2s ease;
      
        &::after {
            position: absolute;
            top: 50%;
            left: 50%;
  
            width: $checkbox-button--after-size;
            height: $checkbox-button--after-size;
  
            background: $checkbox-button--after-background;
            // border-radius: $checkbox-button--border-radius;
            border-radius: 50%;
            transform: translate3d(-50%, -50%, 0);
  
            transition: all 0.2s ease;
  
            content: '';
        }
    }

    .check-svg-path {
        stroke-width: $checkbox-button--check-width;

        stroke: $checkbox-button--check-color;
    }

    // State
    &__input:checked {
        ~ #{$self}__inner {   
            // color: $white;
      
            // background: $black;
            // border-color: $black;
        }
        ~ * #{$self}__check {
            background: $checkbox-button--back-background-checked;
            border-color: $checkbox-button--border-color-checked;
        }
    }
    // Modifier
}

// Checkboxes buttons
.checkboxes-button {
    display: flex;
    flex-wrap: wrap;
    margin: -#{$form--gap-x};

    .checkbox-button {
        width: 50%;
        padding: $form--gap-x;
        @include mq('max-mobile') {
            width: 100%;
        }
    }
}
