// @mixin center...
// @import '@springbokagency/scss-config/mixins/center'

// @mixin cover...
// @import '@springbokagency/scss-config/mixins/cover'

// @mixin mq...
// @import '@springbokagency/scss-config/mixins/mq'

// @mixin placeholder...
// @import '@springbokagency/scss-config/mixins/placeholder'

// @mixin pseudo...
// @import '@springbokagency/scss-config/mixins/pseudo'

// @mixin reset...
// @import '@springbokagency/scss-config/mixins/reset'

// @mixin spacing...
// @import '@springbokagency/scss-config/mixins/spacing'

// @mixin square...
// @import '@springbokagency/scss-config/mixins/square'

// @mixin z-index...
// @import '@springbokagency/scss-config/mixins/z-index'

// Ellipsis
@mixin ellipsis() {
    width: 100%;
    overflow: hidden;

    white-space: nowrap;
    text-overflow: ellipsis;
}

// Icon tricks
@mixin icon-tricks(
    $size: rem(30),
    $background: transparent,
    $background-hover: rgba(black, 0.05),
    $border-size: 1px,
    $border-color: rgba(black, 0.1),
    $border-radius: 50%,
    $line-width: 50%,
    $line-height: 1px,
    $line-background: black,
    $dir: cross,
) {
    position: relative;

    display: block;
    width: $size;
    height: $size;
    margin: 0;
    padding: 0;
    overflow: hidden;

    text-indent: -999999px;

    background: $background;
    border: $border-size solid $border-color;
    border-radius: $border-radius;
    cursor: pointer;

    transition: all 0.2s ease;

    &::before,
    &::after {
        position: absolute;
        top: 50%;
        left: 50%;

        width: $line-width;
        height: $line-height;

        background: $line-background;

        content: '';
    }

    &::before {
        @if $dir == cross {
            transform: translate3d(-50%, -50%, 0) rotate(45deg);
        }@else if $dir == plus {
            transform: translate3d(-50%, -50%, 0) rotate(0deg);
        }@else if $dir == back or $dir == down {
            display: none;
        }
    }

    &::after {
        @if $dir == cross {
            transform: translate3d(-50%, -50%, 0) rotate(-45deg);
        }@else if $dir == plus {
            transform: translate3d(-50%, -50%, 0) rotate(-90deg);
        }@else if $dir == back or $dir == down {
            transform: translate3d(-30%, -50%, 0) rotate(-45deg);

            width: $line-width;
            height: $line-width;

            background: transparent;
            border-top: $line-height solid $line-background;
            border-left: $line-height solid $line-background;
            @if $dir == down {
                transform: translate3d(-50%, -70%, 0) rotate(-135deg);
            }
        }
    }

    &:hover {
        background: $background-hover;
    }
}

// Please use aspect-ratio now.
// http://qatsi.eu/calcul.ratio.image.php
// @mixin responsive-ratio($x,$y, $pseudo: true) {
//     $padding: unquote(( $y / $x ) * 100 + '%');
//     @if $pseudo {
//         &::before {
//             @include pseudo($pos: relative);
//             width: 100%;
//             padding-top: $padding;
//         }
//     } @else {
//         padding-top: $padding;
//     }
// }

// Responsiveness
@mixin ltr-property($property, $spacing, $right: true) {
    $normal: if($right, 'right', 'left');
    $opposite: if($right, 'left', 'right');
    #{$property}-#{$normal}: $spacing;
}
@mixin ltr-position($spacing, $right: true) {
    $normal: if($right, 'right', 'left');
    $opposite: if($right, 'left', 'right');
    #{$normal}: $spacing;
}

// Arrow
@mixin arrow($color: transparent) {
    position: absolute;
    top: 50%;

    display: block;
    width: 0.625em;
    height: 0.625em;
    margin-top: -0.4375em;

    border: 3px solid $color;
    border-top: 0;
    border-right: 0;
    border-radius: 2px;
    transform: rotate(-45deg);
    transform-origin: center;

    content: ' ';
    pointer-events: none;
}

// Loading
@mixin loading($color: #ccc) {
    position: relative;

    display: block;
    width: 1em;
    height: 1em;

    border: 2px solid $color;
    border-top-color: transparent;
    border-right-color: transparent;
    border-radius: 99999px;

    animation: spinAround 500ms infinite linear;

    content: '';
}

// Center no transform
@mixin center-no-transform($width, $height: 0) {
    position: absolute;
    @if $height != 0 {
        left: calc(50% - (#{$width} * 0.5));
        top: calc(50% - (#{$height} * 0.5));
    }  @else {
        left: calc(50% - (#{$width} * 0.5));
        top: calc(50% - (#{$width} * 0.5));
    }
}

// Not last mb
@mixin not-last-mb($spacing: var(--not-last-mb, #{rem(24)}) ) {
    &:not(:last-child) {
        margin-bottom: rem(24);
    }
}

%loading {
    @include loading;
}

%not-last-mb {
    @include not-last-mb;
} 


